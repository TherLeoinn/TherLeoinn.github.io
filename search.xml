<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2023.12.30_学习日记</title>
    <url>/2024/01/17/2023.12.30_%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：阴<br>学习地点：宿舍<br>学习时长：4h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>图的算法<ol>
<li>图的遍历（BFS, DFS）</li>
<li>最小路径（Dijkstra）</li>
<li>最小生成树（Prim, K）</li>
</ol>
</li>
<li>神策面试题和美团面试题<ol>
<li><img src="/2023.12.30_%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/a0c3a998fd4e6182648b3c4c61ba7d7.png" alt="Alt text"><br><em>这个题很简单，一个是下标一个是值，找到数学算法之后直接遍历一次就行，遍历的时候记录res。</em></li>
<li><img src="/2023.12.30_%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/3ba9852c15f8184e6cd1dd43d1f241b.png" alt="Alt text"><br><em>俩数组把值变得一样，这个原题比较简单，递归+动态规划就行，leetcode72编辑距离难一点，是字符串不是数组，边界问题要细心考虑。</em></li>
</ol>
</li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>这几个面试题不太难，看一遍基本就会了，动态规划忘的有点多，今天做了一个热热手，碰到越界问题找错太麻烦了，还好有万能的GPT省了我很多时间。今天起的太晚了，明天早起，over。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2023.12.31_学习日记</title>
    <url>/2023/12/31/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：阴（重度污染）<br>学习地点：宿舍<br>学习时长：5h（2023的最后一天也要进步！）</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>美团面试题（leetcode1162）<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/a481855af7730251c3d3aaa276bb352.png" alt="Alt text"><br><em>这个题用广度优先搜索，找所有岛的周围海域，用到deque，每遍历一遍step+1。</em></li>
<li>微软面试题（leetcode2384）<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/1cda8574d743b7f29392f9f1106b47f.png" alt="Alt text"><br><em>这个题就是用Counter函数统计数字的个数，然后用切片方法把这个词生成出来就行,还有lstrip和rstrip函数，很好用！</em></li>
<li>微软面试题（leetcode2477）<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/7855d0df445fa39a7ec024f131e5c9a.png" alt="Alt text"><br><em>这个题用了图的dfs算法，题不难，但是对dfs的递归要彻底弄透</em></li>
<li>网易面试题<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/a9fdf6d39c625bac7b5109a6c9557f6.png" alt="Alt text"><br><em>这个题可以用动态规划，关键是找到暴力递归的解法，这个递归是范围上的尝试模型，修改i位置的值，可以改为red三个值，同时考虑前面两个值的情况。</em></li>
<li>弗吉尼亚理工大学算法考试题<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/44fb1a48dd31fd0a9b25ada7904830f.png" alt="Alt text"><br><em>暴力递归到动态规划，index选还是不选，分情况讨论，剩余值会变动，最后转化成三维数组动态规划。</em></li>
<li>弗吉尼亚理工大学算法考试题<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/e69717d9b1a589d7221cc679155734a.png" alt="Alt text"><br><em>跟上面的题一样，但是可以重复用绳子，所以index递归的时候可以不加1</em></li>
<li>吉尼亚理工大学算法考试题<br><img src="/2023-12-31-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/9fecc57982124c6632fc6b78d3f199c.png" alt="Alt text"><br><em>一样是选和不选的情况，但是函数变量要用的是上一个选的index，选的时候要判断preindex的结尾值是不是要等于index的初始值，最后动态规划，还可以有更优解法，用hashmap记录（x，y）中y开头的区间，如果有，hashmap+1，从右往左遍历就可以实现。</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>今天coding花了太多时间，题没有做几个，效率不够高，有待加强，明天是2024年了，希望女朋友大人考研成功，也希望我们能好好走下去。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.01_学习日记</title>
    <url>/2024/01/01/2024-01-01-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：2h（2024的第一天也在学习！）</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p>今天没有学习算法，但是把hexo的动态背景、加载效果等等都设置了一下，吐槽一下，bug太多了，打赏界面图标部署以后一直加载不出来，心烦的嘞。</p>
<h2 id="酒精日记"><a href="#酒精日记" class="headerlink" title="酒精日记"></a>酒精日记</h2><p>下午健身，晚上和家人一起吃饭，喝了红酒、啤酒、白酒。。。又喝杂了。。和哥哥嫂子聊到了女朋友，嘿嘿，很是开心！！坐地铁回到寝室又饿了，现在准备加餐！<br>over</p>
]]></content>
      <categories>
        <category>酒精日记</category>
      </categories>
      <tags>
        <tag>酒精日记</tag>
      </tags>
  </entry>
  <entry>
    <title>2024-01-02-学习日记</title>
    <url>/2024/01/02/2024-01-02-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：3h（醒酒日。。）</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>字节面试题（leetcode1574变式）<br><img src="/2024-01-02-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/018869481261887ca2064d472a264b1.png" alt="Alt text"><br><em>这个题用二分搜索+双指针解，培养画图的能力，有些题把图画出来好解很多，别光靠脑子画图，左右指针分别代表前缀后缀的反向后前指针，然后找最小值即可。</em></li>
<li>京东面试题<br><img src="/2024-01-02-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/eebc6b774477d6fb4470a56d5cf86a5.png" alt="Alt text"><br><em>这个题值得反复看，用一个区间套住target并且讨论多种情况下左右边界是否做变化，最核心的思想是这个题最多的操作数是2，如果相同返回0，如果两个小于n的值返回2，然后讨论1的情况，还要用cnt函数数字出现的次数，比较考验思路请不清晰。</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>今天精神状态不佳，不找理由了，明天多做几个题把今天的补上。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.03_学习日记</title>
    <url>/2024/01/03/2024-01-03-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：8h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>公司面试题<br><img src="/2024-01-03-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/48f6153b8cc1ffb4dc9058f9a58d8da.png" alt="Alt text"><br><em>变量复用这个技巧很重要，如果需要之前的一个信息，直接用变量复用，每次遍历该数据即可，整体思路是首先生成rightup和rightdown函数判断右边是否波浪滚动，从右往左遍历生成每个位置右边是否是上下波浪，然后从左往右遍历，如果删掉该位置，那么要符合前后的一些关系才行，这里用到变量复用。记得单独算删掉最后一个位置的情况。</em></li>
<li>火柴拼正方形（leetcode473）<br><img src="/2024-01-03-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/5d7c5931282568abefba41a94801321.png" alt="Alt text"><br><em>这个题下次再刷一次，好经典的题，总体来说是判断一堆数字能否拼凑成四个大小一样的值，暴力方法是判断当前位置选择后是否超出边长，如果不超过，那就递归，如果相等，edges就-1，当前长度归0，继续递归。最核心的是status这个值，表示了0-15根火柴是否可选，用二进制表达，选了那就|（1&lt;&lt;i），判断是否全选就是（1&lt;&lt;lenth）-1，然后动态规划，只用记忆化status即可，初始化为0，如果可拼凑就是1，不行就是-1。</em></li>
<li>好子集的个数（leetcode1994，困难题）<br><img src="/2024-01-03-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/7648877c92613d9e3efcecbfd82e9bd.png" alt="Alt text"><br><img src="/2024-01-03-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/3dee3a4807b007200ef3402ff19ddf1.png" alt="Alt text"><br><em>炫耀一下，打败100%用户！！！这个题很难，把0-30的所有数是否有质数表达成0001001010的形式，每个0或1表示当前质数是否是其因数，所以每个数字依次可以用status来表示，对于每个数组，遍历每个数字的次数，集合里每个数的状态形式分别&amp;10位质数的状态形式，如果&amp;后的值为0，说明可以放进去当子集，并且可以放进去这个数字的次数个，而且10位质数状态可能不止一个，是status[number]个，最后把所有的状态相加，不要忽略掉1的情况，每一个1都要×2。</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>这几个题做了起码6h，太难了，今天学到了状态压缩，还有二进制的位运算。。要想好每个题递归的变量，哪些变量是必不可少的，明天继续加油。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.04_学习日记</title>
    <url>/2024/01/04/2024-01-04-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：6h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>小红书面试题<br><img src="/2024-01-04-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/f806571b470cf54c73391b0a4db1f07.png" alt="Alt text"><br><em>这个题先排除掉奇数个的情况以及红蓝数量大于一半的情况。然后将数组按照先无色、红色、蓝色分别排序并且把无色按照cost排序，cost指红色-蓝色cost最大的情况，统计每个颜色的数量，先把所有的无色都变成红色，然后算出有多少个要变成蓝色，然后把无色的前n个变化即可。<a href="https://github.com/algorithmzuo/publicclass2020/blob/master/src/class059/Code01_MagicStone.java">题解链接</a></em></li>
<li>网易面试题（lc135）<br><img src="/2024-01-04-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/24d68ed6e3003491d46d5cae0484312.png" alt="Alt text"><br><em>就是从左往右遍历用一个数组记录每个位置连续比左边大的次数，再从后往前遍历一次记录比右边大的次数，最后取最大值即可，比较简单。如果是环形的，那就取局部最小值为1，然后左右遍历，遍历的时候用一个数组即可，左右得分别是局部最小值夹着。</em></li>
<li>腾讯面试题（lc881）<br><img src="/2024-01-04-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/86dbeecd667add524a2c17cbeb6e153.png" alt="Alt text"><br><em>直接贪心，先排序，左右两个指针，左右两个值相加小于目标值的时候，左边右移，右边左移count+1，否则，count+1同时右边左移但左边不右移，因为右边的大的数没有小的数可以匹配了，左边还可以继续用，但是右边必须让count更新。</em></li>
<li>京东面试题（lclcr010）<br><img src="/2024-01-04-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/e9ffc17c308c7a593afcffc4266286e.png" alt="Alt text"><br><em>前缀和加哈希，这个题就是遍历一次，以每个数结尾的和-k值有多少个，并且同时记录前缀和，把前缀和记录到哈希表里，最后遍历相加每一个前缀和的个数即可。这个题很经典，多看</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>今天几个面试题很经典，每天保持做5个题左右，坚持到1月底能做150个题了，加油！希望2月份能拿到好的实习机会。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.05_学习日记</title>
    <url>/2024/01/05/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：6h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>猿辅导面试题<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/c7d4663df3d308218d7c6bbcebad4d5.png" alt="Alt text"><br><em>这个题核心是想到，如果有a个1，那必定有a个0是右括号，剩下n-2a&#x2F;2对括号可以随意更改颜色，k种颜色就是k的这么多次方，然后如果有s种左右括号的确定值存在，就乘以s，最后写递归，i表示位置，j表示左括号比右括号多的个数，有一个剪枝就是当n-i&lt;j时，就得跳出。最后是动态规划。</em></li>
<li>米哈游面试题<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/8294946bf3229d1fe5df4028c2b49a1.png" alt="Alt text"><br><em>这个题首先是要会图的构建，【0：【next】】，list里套list即可，然后想到dfs，题目的要求可以转化为，任意一个head的多条边，颜色至少两种，所以准备两种着色方式，123，132，head为1，另外两条边按照这两条边来着色，用index%3可以重复123这个过程，并且有个筛选过程就是对没着色的才着色，着色的是父节点。然后一直dfs，最后对其他边分别着色132即可，最后返回colors数组。还有如果没找到有多个子节点的head的话，就返回1，1就行。</em></li>
<li>逆波兰式（lc150）<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/bcd35c15e39d8142dac539760e3619e.png" alt="Alt text"><br><em>逆波兰式表达成算术表达式，就是用到两个栈，第一个栈放值，第二个栈放值得类型，分为数字，加减，乘除，如果是数字，直接加入栈，如果是加减，返回一个a + b，并且第二个栈入加减，如果是乘除，第二个栈入乘除，然后判断左边和右边的数得类型，如果是加减那就要加括号，再返回。</em></li>
<li>lc2360（想了很久很久）<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/37d6bd87c5e867b8ea56376dc94b2b3.png" alt="Alt text"><br><em>这个题就是用一个数组记录访问该点的时间，如果该点访问过，还要判断访问时间和当前时间的大小，区分是老环还是新环，这个题做了两三个小时，又想多做两个题，又饿，搞得后面很紧张，其实题目本身不难，但是太急了，什么都想不好。。。</em></li>
<li>打怪物<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/bfced3fc9aca69b23ba938f7d3e897f.png" alt="Alt text"><br><em>看血量，很大，所以放弃递归，然后想到二分法能不能做，看单调性。先找到中间值看能不能死，不可能死就在右边，能死就在左边，判断能不能死就看每次的攻击伤害谁更高。任何窗口和二分问题都要看单调性。</em></li>
<li>最大栈<br><img src="/2024-01-05-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/0c093874f1d1776df76d31285fa02c9.png" alt="Alt text"><br><em>用加强堆来实现栈内的元素排序，保存的是节点的内存地址，栈内放的元素是双向链表。这样就能实现最大栈。</em></li>
</ol>
<h1 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h1><p>今天刷题数量达标，最大栈这个问题还要看看，加强堆的结构后面再去了解一下，加油！</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.06_学习日记</title>
    <url>/2024/01/06/2024-01-06-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：3h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>航班问题（lc1109）<br><img src="/2024-01-06-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/69a278f5f666b0883c0e707171af482.png" alt="Alt text"><br><em>数组上累加数字并且数字相同的话，想到差分法，在i加上该数字，j+1减该数字，最后遍历一遍，后一个数&#x3D;前一个数加当前数字即可。学到新方法，差分法，类似于前缀和。</em></li>
<li>最小轮调（lc798）<br><img src="/2024-01-06-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/53fa795034930c01a39093ac7473838.png" alt="Alt text"><br><em>看到这个题，想到用cnt记录移动0-k个单位的得分，因为是连续的一样的数字，所以想到用差分数组，然后分情况讨论值是否大于当前值的不同情况，最后遍历数组即可。</em></li>
<li>小红书笔试题<br><img src="/2024-01-06-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/65938a7de1604b611556afae52a63fd.png" alt="Alt text"><br><em>这个题就是把想到0的个数-1的个数最多的时候，就翻转这个数组，这个时候把0变成1，1变成-1，就能找到0-1最多的区间了。</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>今天学到了差分法，第一个数字+1，最后一个数字下一位-1。还有把数字换成1，-1，求和就可以得到两个对象个数相减的个数。明天继续学习</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.07_学习日记</title>
    <url>/2024/01/07/2024-01-07-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：宿舍<br>学习时长：2h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><ol>
<li>小红书笔试题<br><img src="/2024-01-07-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/2e0f4af4161e72112ca37eec5628c06.png" alt="Alt text"><br><em>找一个数组的任意范围内最大值，用NlogN实现，想到用RMQ方法实现，这个方法是指第i个数往后的2的j次方个数的最大值，跟动态规划一样，先把第一行填完，i行j列，第一行就是每个值填进去就行，然后下面每一行都依赖前一行的值，因为i行j列依赖i行j-1列和后面那一堆的最大值然后取最大值。填完以后想找某个区间最大值就是找这个区间有多少个数，然后2的多少次方能到这个数，最后前后两个区间取最大值，O1的操作。</em></li>
<li>腾讯音乐面试题<br><img src="/2024-01-07-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/9af13223e2ff237dc3fcaff3096aa62.png" alt="Alt text"><br><em>两种方法，1：其实就是统计连续0的方法然后相乘，每个连续零可以搞个动态规划表出来，长度表示最大值，宽度表示数组长度，dp【i，j】就是4个连续0填3个格子的大小，最后返回几个dp值得乘积。2：第二个方法是用数学方法，n个数字里取m个单调不减数列，就是C（n+m，m），然后找到连续0得个数，最后乘起来。</em></li>
</ol>
<h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>今天学习时间比较短，明天要出门旅游，寒假开始喽，每天也要坚持刷题。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.08_学习日记</title>
    <url>/2024/01/08/2024-01-08-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：多云<br>学习地点：寝室<br>学习时长：3h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p>这周要旅游，下周统一更新具体学习内容。</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.09_学习日记</title>
    <url>/2024/01/09/2024-01-09-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：无<br>学习时长：0h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p>今天没有学习，下周统一更新学习内容。</p>
]]></content>
      <tags>
        <tag>学习日记</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.16_学习日记</title>
    <url>/2024/01/16/2024-01-16-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<p>天气：晴<br>学习地点：家<br>学习时长：3h</p>
<span id="more"></span>
<h2 id="学习内容"><a href="#学习内容" class="headerlink" title="学习内容"></a>学习内容</h2><p>今天在火车上看了视频，把堆结构简单复习了一下，明天开始正式学习！</p>
]]></content>
      <categories>
        <category>学习日记</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>2024.01.17_学习日记</title>
    <url>/2024/01/17/2024-01-17-%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
